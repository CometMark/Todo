{"version":3,"sources":["components/List.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["List","props","Fragment","onSubmit","submitHandler","className","placeholder","maxLength","type","onChange","task","value","inputTask","size","disabled","toDoList","map","lol","index","unchecked","style","onClick","delHandler","class","length","Home","useState","setInputTask","arr","setArr","list","splice","event","preventDefault","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PA4CeA,G,MAzCJ,SAACC,GAGZ,OACI,eAAC,IAAMC,SAAP,WAEA,uBAAOC,SAAUF,EAAMG,cAAeC,UAAU,eAAhD,UACC,uBAAOC,YAAY,uBACpBC,UAAU,KAAKC,KAAK,OACnBC,SAAUR,EAAMS,KACfC,MAAOV,EAAMW,UAAWC,KAAK,KAAKR,UAAU,cAC9C,wBAAQS,UAAWb,EAAMW,UACxBJ,KAAK,SACLH,UAAWJ,EAAMW,UAAe,MAAa,SAF9C,oBAKA,sBAAKP,UAAU,OAAf,UACCJ,EAAMc,SAASC,KAAI,SAACC,EAAIC,GAAL,OACpB,sBAAKb,UAAU,OAAf,UACA,sBAAKA,UAAU,cAAf,UACA,uBAAOc,WAAS,EAACX,KAAK,WAAWH,UAAU,QAASe,MAAO,CAAC,OAAS,kBACrE,uBAAOA,MAAO,CAAC,SAAW,WAAW,OAAS,OAA9C,SAAwDH,OAExD,mBAAGI,QAAS,kBAAIpB,EAAMqB,WAAWJ,IAAjC,sBAL4BA,MAS3B,qBAAKK,MAAM,cAAX,SACD,mBAAGH,MAAO,CAAC,QAAU,sBACrB,OAAS,gBACT,WAAa,MACb,SAAW,OACX,MAAQ,sBAJR,SAKEnB,EAAMc,SAASS,OAAO,0BCGbC,G,MAnCJ,WAAK,IAAD,EACmBC,qBADnB,mBACLd,EADK,KACKe,EADL,OAEOD,mBAAS,IAFhB,mBAELE,EAFK,KAEDC,EAFC,OAGWH,oBAAS,GAHpB,6BAqBf,OAAO,gCACH,qBAAKN,MAAO,CAAC,QAAU,eAAvB,SACA,oBAAIf,UAAU,OAAd,uBAGA,cAAC,EAAD,CAAMU,SAAUa,EAChBN,WAAY,SAACJ,GAAD,OAdC,SAACA,GAClB,IAAMY,EAAK,YAAIF,GACfE,EAAKC,OAAOb,EAAM,GAClBW,EAAOC,GAWkBR,CAAWJ,IAC/Bd,cApBe,SAAC4B,GACjBH,EAAO,GAAD,mBAAKD,GAAL,CAAShB,KACfoB,EAAMC,iBACNN,EAAa,KAkBXjB,KAxBK,SAACsB,GACZL,EAAaK,EAAME,OAAOvB,QAwBpBC,UAAWA,S,MCvBFuB,MARf,WACE,OACE,qBAAK9B,UAAU,MAAf,SACG,cAAC,EAAD,OCMQ+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.705c0007.chunk.js","sourcesContent":["import React,{useState}   from \"react\";\r\nimport \"./List.css\";\r\n\r\nconst List=(props)=>{\r\n \r\n   \r\nreturn(\r\n    <React.Fragment>\r\n\r\n    <form  onSubmit={props.submitHandler} className=\"form_content\" >\r\n    {<input placeholder=\"Create a new todo...\" \r\n    maxLength=\"90\" type=\"text\"\r\n     onChange={props.task}\r\n      value={props.inputTask} size=\"70\" className=\"inputTask\" />}\r\n    <button disabled={!props.inputTask}\r\n     type=\"submit\" \r\n     className={props.inputTask ? `${\"btn\"}` : `${\"disBtn\"}`} >Add</button>\r\n    </form>\r\n\r\n    <div className=\"list\" >\r\n    {props.toDoList.map((lol,index)=>\r\n    <div className=\"main\"  key={index}  >\r\n    <div className=\"single_task\" >  \r\n    <input unchecked type=\"checkbox\" className=\"check\"  style={{\"margin\":\"0 10px 0px 0\"}} />\r\n    <label style={{\"position\":\"relative\",\"bottom\":\"2px\"}} >{lol}</label>\r\n    </div>\r\n    <p onClick={()=>props.delHandler(index)}>âœ•</p>\r\n    </div>\r\n    )}\r\n     \r\n     <div class=\"last_column\" >\r\n    <p style={{\"padding\":\"10px 15px 15px 15px\",\r\n    \"margin\":\"10px 0 10px 0\",\r\n    \"fontWeight\":\"700\",\r\n    \"fontSize\":\"12px\",\r\n    \"color\":\"hsl(234, 21%, 29%)\"}} >\r\n     {props.toDoList.length+\" items left\"}</p> \r\n     </div>\r\n\r\n    </div>\r\n    </React.Fragment>\r\n)\r\n}\r\n\r\nexport default List;","import React,{useState} from 'react';\r\nimport List from \"../components/List\";\r\nimport  \"./Home.css\";\r\n\r\nconst Home=()=>{\r\n    const[inputTask,setInputTask]=useState();\r\n    const[arr,setArr]=useState([]);\r\n    const[theme,setTheme]=useState(true);\r\n    \r\nconst task=(event)=>{\r\nsetInputTask(event.target.value);\r\n}\r\nconst submitHandler=(event)=>{\r\n    setArr([...arr,inputTask]);\r\n    event.preventDefault();\r\n    setInputTask(\"\");\r\n}\r\nconst delHandler=(index)=>{\r\nconst list=[...arr];\r\nlist.splice(index,1);\r\nsetArr(list);\r\n}\r\n\r\n\r\n\r\nreturn(<div >\r\n    <div style={{\"display\":\"inline-flex\"}} >  \r\n    <h1 className=\"head\" >T O D O</h1>\r\n    </div>\r\n    \r\n    <List toDoList={arr} \r\n    delHandler={(index)=>delHandler(index)}\r\n     submitHandler={submitHandler}\r\n      task={task} \r\n      inputTask={inputTask} />\r\n</div>\r\n)\r\n}\r\n\r\nexport default Home;","import Home from \"./pages/Home\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}